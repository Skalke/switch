{
  "title": "emuiibo",
  "author": "XorTroll",
  "category": "tool",
  "version": "0.1",
  "url": "https://github.com/XorTroll/emuiibo/releases",
  "license": "GPLv2",
  "description": "MitM'ing NFP services for Amiibo emulation!",
  "details": "Usage\\nThis Download installs for both Atmosphere and ReiNX.\\n\\nAccording to tests, should work on any CFW which allows NSP sysmodules (Atmosphere, ReiNX).\\n\\nYou also have to set the boot2 flag, whose location depends on the CFW:\\n\\nAtmosphere: create a file named boot2.flag inside titles/0100000000000352/flags directory.\\n\\nReiNX: create a file named boot2.flag inside titles/0100000000000352 directory.\\n\\nCombos\\nAll the input combos are performed with R-Stick pressing and pressing the D-pad in an specific direction (at the same time). Combos must (should) be done before or after the game starts looking for amiibos.\\n\\nToggle amiibo emulation: Press R-Stick (like it was a button) and also pressing the D-pad up. Toggles/untoggles emulation.\\n\\nToggle amiibo emulation once: Same as above, but pressing the D-pad right. Toggles emulation once, after emulating an amiibo then it will untoggle automatically.\\n\\nUntoggle amiibo emulation: Same as above, but pressing the D-pad down. Untoggles amiibo emulation, and should be used as a way to fully ensure it is untoggled, in case you don't know whether it's toggled or not.\\n\\nSwap amiibo: Same as above, but pressing the D-pad left. Moves to the next amiibo in the amiibo directory, if last one starts again with the first one. Only has effect if amiibo emulation is toggled.\\n\\nEmuiibo's amiibo directory is sd:/emuiibo. Place your amiibo dumps (must be *.bin files) there.\\n\\nAmiibo emulation\\nEmuiibo gets amiibo's data, but the register info (amiibo name, write dates, mii) is auto-generated, as it isn't present on amiibo dumps:\\n\\nName will be the file's name (Amiibo.bin -> Amiibo), but if the name is bigger than 10 chars it will be hardcoded to Emuiibo.\\n\\nWrite date is hardcoded to 15th June 2019.\\n\\nThe amiibo's mii (owner) is hardcoded to the first mii found in the console mii database.\\n\\nAmiibo dumps\\nDumps consist on *.bin files, which must be 540 bytes (perhaps even more?). They can be dumped with several tools.\\n\\nFor developers\\nThis MitM process also hosts a custom service, nfp:emu, which can be used to control amiibo swapping and emulation by IPC.\\n\\nYou have an implementation for C/C++ and libnx in here.\\n\\nCredits\\nAll the persons who contributed to the nfp-mitm project before me: Subv, ogniK, averne, spx01, SciresM\\n\\nlibstratosphere libraries (SciresM again)\\n\\n\\n.\\n",
  "changelog": "\\n\\n"
}